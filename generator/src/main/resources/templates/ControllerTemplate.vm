
package ${packageName}.controller.${modelName};

import com.alibaba.fastjson.JSONObject;
import com.baofoo.framework.crud.common.ResponseEntityDto;
import ${packageName}.service.${modelName}.${domainName}Service;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.lang.reflect.InvocationTargetException;

/**
* Created by ${author} on ${dataTime}.
*/
@Controller
@RequestMapping("/${modelName}/${domainFirstWordLowerCase}")
@Slf4j
public class ${domainName}Controller {

		@Resource
		private ${domainName}Service ${domainFirstWordLowerCase}Service;
		//插入${tableDesc}
		@RequestMapping("/insert${domainName}")
		@ResponseBody
		public ResponseEntityDto insert${domainName}(@RequestBody JSONObject param, HttpServletRequest request) throws InvocationTargetException, IllegalAccessException {
			ResponseEntityDto<?> entity = ${domainFirstWordLowerCase}Service.insert${domainName}(param);
			return entity;
		}
		//批量插入${tableDesc}
		@RequestMapping("/insert${domainName}List")
		@ResponseBody
		public ResponseEntityDto insert${domainName}List(@RequestBody JSONObject param, HttpServletRequest request) throws InvocationTargetException, IllegalAccessException {
			ResponseEntityDto<?> entity = ${domainFirstWordLowerCase}Service.insert${domainName}List(param);
			return entity;
		}
		//更新${tableDesc}
		@RequestMapping("/update${domainName}")
		@ResponseBody
		public ResponseEntityDto update${domainName}(@RequestBody JSONObject param) throws InvocationTargetException, IllegalAccessException {
			ResponseEntityDto<?> entity = ${domainFirstWordLowerCase}Service.update${domainName}(param);
			return entity;
		}
		//查询所有${tableDesc}记录
		@RequestMapping("/queryAll${domainName}List")
		@ResponseBody
		public ResponseEntityDto queryAll${domainName}List(@RequestBody JSONObject param) throws InvocationTargetException, IllegalAccessException {
			ResponseEntityDto<?> entity = ${domainFirstWordLowerCase}Service.queryAll${domainName}List(param);
			return entity;
		}
		//通过条件查询${tableDesc}记录(不分页)
		@RequestMapping("/query${domainName}ListByParam")
		@ResponseBody
		public ResponseEntityDto query${domainName}ListByParam(@RequestBody JSONObject param) throws InvocationTargetException, IllegalAccessException {
			ResponseEntityDto<?> entity = ${domainFirstWordLowerCase}Service.query${domainName}ListByParam(param);
			return entity;
		}
		//通过条件查询${tableDesc}记录(分页)
		@RequestMapping("/queryPage${domainName}ListByParam")
		@ResponseBody
		public ResponseEntityDto queryPage${domainName}ListByParam(@RequestBody JSONObject param) throws InvocationTargetException, IllegalAccessException {
			ResponseEntityDto<?> entity = ${domainFirstWordLowerCase}Service.queryPage${domainName}ListByParam(param);
			return entity;
		}
		//通过ID查询${tableDesc}记录
		@RequestMapping("/query${domainName}ById")
		@ResponseBody
		public ResponseEntityDto query${domainName}ById(@RequestBody JSONObject param) throws InvocationTargetException, IllegalAccessException {
			ResponseEntityDto<?> entity = ${domainFirstWordLowerCase}Service.query${domainName}ById(param);
			return entity;
		}
		//通过Id删除${tableDesc}记录
		@RequestMapping("/delete${domainName}ById")
		@ResponseBody
		public ResponseEntityDto delete${domainName}ById(@RequestBody JSONObject param) throws InvocationTargetException, IllegalAccessException {
			ResponseEntityDto<?> entity = ${domainFirstWordLowerCase}Service.delete${domainName}ById(param);
			return entity;
		}
		//批量删除${tableDesc}记录
		@RequestMapping("/deleteBatch${domainName}")
		@ResponseBody
		public ResponseEntityDto deleteBatch${domainName}(@RequestBody JSONObject param) throws InvocationTargetException, IllegalAccessException {
			ResponseEntityDto<?> entity = ${domainFirstWordLowerCase}Service.deleteBatch${domainName}(param);
			return entity;
		}
}
