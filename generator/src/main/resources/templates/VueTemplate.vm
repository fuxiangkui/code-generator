<template>
    <div id="content_wrapper">
            <el-dialog title="${tableDesc}" :visible.sync="${domainFirstWordLowerCase}FormDialog">
                <el-form :model="${domainFirstWordLowerCase}FormData" :rules="rules" ref="${domainFirstWordLowerCase}FormData">
 #set($Integer = 0) #foreach($tableField in $tableFieldList)
 #if( $Integer.parseInt(${tableField.length})>200) <el-form-item label="${tableField.desc}:" prop="${tableField.domainFieldFirstWordLowerCase}"><el-input type="textarea" :rows="2" v-model="${domainFirstWordLowerCase}FormData.${tableField.domainFieldFirstWordLowerCase}"> </el-input></el-form-item>
#else <el-form-item label="${tableField.desc}:" prop="${tableField.domainFieldFirstWordLowerCase}"><el-input v-model="${domainFirstWordLowerCase}FormData.${tableField.domainFieldFirstWordLowerCase}"></el-input></el-form-item>
  #end
  #end

                    <el-form-item>
                                <el-button @click="${domainFirstWordLowerCase}FormDialog = false">取 消</el-button>
                                <el-button type="primary" @click="submitForm('${domainFirstWordLowerCase}FormData')">确 定</el-button>
                            </el-form-item>
                </el-form>
            </el-dialog>
            <el-row :gutter="24">
                <el-col :span="24">
                        <el-row >
                            <el-form :model="${domainFirstWordLowerCase}QueryFormData" inline>
            #foreach($tableField in $tableFieldList)
                <el-form-item label="${tableField.desc}:"><el-input v-model="${domainFirstWordLowerCase}QueryFormData.${tableField.domainFieldFirstWordLowerCase}"></el-input></el-form-item>
            #end
                <el-form-item><el-button @click="queryData" type="primary">查 询</el-button></el-form-item>
                            <el-form-item><el-button @click="addData" type="primary">新 增</el-button></el-form-item>
                        </el-form>

                        </el-row>
                        <el-row >
                            <el-table :data="${domainFirstWordLowerCase}List"  border stripe style="width: 100%"  highlight-current-row  >
                                <el-table-column prop="id" label="#" width="60" ></el-table-column>
            #foreach($tableField in $tableFieldList)
                <el-table-column prop="${tableField.domainFieldFirstWordLowerCase}" label="${tableField.desc}" ></el-table-column>
            #end
                    <el-table-column fixed="right" label="操作" width="120">
                                    <template slot-scope="scope">
                                        <el-button @click="edit${domainName}(scope.row)" type="text" size="small">编 辑</el-button>
                                        <el-button @click="delete${domainName}(scope.row)" type="text" size="small">删 除</el-button>
                                    </template>
                                </el-table-column>
                            </el-table>
                            <div align="right">
                                <el-pagination
                                        @size-change="sizeChange"
                                        @current-change="currentChange"
                                        :current-page="pager.pageNo"
                                        :page-sizes="[10, 20, 50]"
                                        :page-size="pager.pageSize"
                                        layout="sizes, prev, pager, next ,total,  jumper"
                                        :total="pager.pageTotal">
                                </el-pagination>
                            </div>
                        </el-row>
                </el-col>
            </el-row>
    </div>
</template>
<script type="text/ecmascript-6">
    export default {
        data() {
             return {
                 pager:{
                     pageNo:1,
                     pageSize:10,
                     pageTotal:100
                 },

                 ${domainFirstWordLowerCase}FormData:{
        #foreach($tableField in $tableFieldList)
            ${tableField.domainFieldFirstWordLowerCase}:"",
        #end
                 },
                ${domainFirstWordLowerCase}QueryFormData:{
        #foreach($tableField in $tableFieldList)
            ${tableField.domainFieldFirstWordLowerCase}:"",
        #end
                },
                rules: {
                    #foreach($tableField in $tableFieldList)
                        ${tableField.domainFieldFirstWordLowerCase}: [
                            { required: true, message: '请输入${tableField.desc}', trigger: 'blur' },
                        ],
                    #end
                },
                ${domainFirstWordLowerCase}FormDialog:false,
                ${domainFirstWordLowerCase}List: []
             };
        },
        methods: {
            sizeChange(val){
                var _self = this;
                _self.pager.pageSize = val;
                _self.queryData();
            },
            currentChange(val){
                var _self = this;
                _self.pager.pageNo = val;
                _self.queryData();
            },
            addData(){
                var _self = this;
                _self.${domainFirstWordLowerCase}FormData={
        #foreach($tableField in $tableFieldList)
            ${tableField.domainFieldFirstWordLowerCase}:"",
        #end
                };
                _self.${domainFirstWordLowerCase}FormDialog = true;
            },
            edit${domainName}(row){
                var _self = this;
                //_self.${domainFirstWordLowerCase}FormData= row;
                _self.${domainFirstWordLowerCase}FormData=JSON.parse( JSON.stringify(row) );
                _self.${domainFirstWordLowerCase}FormDialog = true;
                this.$refs['${domainFirstWordLowerCase}FormData'].resetFields();
            },
            saveData(){
                var _self = this;
                var param = {};
                param= _self.${domainFirstWordLowerCase}FormData;
                var insert${domainName} = new common.insert${domainName}();
                insert${domainName}.param = JSON.stringify(param);
                insert${domainName}.execute(function (data) {
                    if (data.status == 1 && data.error == "00000000") {
                        _self.queryData();
                    } else {

                    }
                });
            },
            submitForm(formName) {
                var _self = this;
                var param = {};
                param=self.${domainFirstWordLowerCase}FormData;
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                    _self.saveData();
                    } else {
                    return false;
                    }
                });
            },
            delete${domainName}(row){
                var _self = this;
                var param = {};
                param.id=row.id;
                var delete${domainName}ById = new common.delete${domainName}ById();
                delete${domainName}ById.param = JSON.stringify(param);
                delete${domainName}ById.execute(function (data) {
                    if (data.status == 1 && data.error == "00000000") {
                        _self.queryData();
                    } else {

                    }
                });
            },
            queryData(){
                var _self = this;
                _self.${domainFirstWordLowerCase}FormDialog = false;
                var param = {};
                param=_self.${domainFirstWordLowerCase}QueryFormData;
                param.pageNo=_self.pager.pageNo;
                param.pageSize=_self.pager.pageSize;
                var query${domainName}ListByParam = new common.queryPage${domainName}ListByParam();
                query${domainName}ListByParam.param = JSON.stringify(param);
                query${domainName}ListByParam.execute(function (data) {
                    if (data.status == 1 && data.error == "00000000") {
                        _self.${domainFirstWordLowerCase}List = data.data.list;
                        _self.pager.pageTotal = data.data.total;
                    } else {

                    }
                });
            }
        },
        mounted: function () {
            var _self = this;
            _self.queryData();
        }
    }
</script>

<style type="scss">
    .el-row {
        margin-bottom: 20px;
        &:last-child {
            margin-bottom: 0;
        }
    }
</style>